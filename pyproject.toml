[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "PyDelphin"
dynamic = ["version"]
description = "Libraries and scripts for DELPH-IN data"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
  {name = "Michael Wayne Goodman", email = "goodman.m.w@gmail.com"}
]
keywords = ["nlp", "semantics", "hpsg", "delph-in", "linguistics"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Linguistic",
  "Topic :: Utilities",
]
dependencies = [
  "penman",
  "progress",
  "Pygments",
]

[project.optional-dependencies]
web = [
  "falcon",
  "httpx",
]
repp = [
  "regex"
]

[project.scripts]
delphin = "delphin.main:main"

[project.urls]
Homepage = "https://github.com/delph-in/pydelphin"
Documentation = "https://pydelphin.readthedocs.io"
Changelog = "https://github.com/delph-in/pydelphin/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "delphin/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]
[tool.hatch.build.targets.wheel]
packages = ["delphin"]

[tool.hatch.envs.dev]
dependencies = [
  "pytest",
  "ruff",
  "mypy",
]
[tool.hatch.envs.dev.scripts]
test = "pytest {args:.}"
lint = "ruff check {args:delphin/}"
typecheck = "mypy --namespace-packages --explicit-package-bases --ignore-missing-imports --disable-error-code=method-assign {args:delphin/}"

[tool.hatch.envs.docs]
dependencies = [
  "sphinx",
  "sphinx-copybutton",
  "furo",
  "httpx",
  "falcon",
]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html"
clean = "make -C docs clean"

[tool.ruff]
target-version = "py39"
line-length = 79

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "E",    # pycodestyle errors
  "I",    # isort
  "F",    # Pyflakes
  "W",    # pycodestyle warnings
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.format]
quote-style = "single"

[tool.mypy]
python_version = "3.9"
